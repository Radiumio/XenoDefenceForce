class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};
	class Helicopter: Vehicle 
	{
		skeletonInherit="Vehicle";
		skeletonBones[]=
		{
			"frLeftTurbine1","",
			"frLeftTurbine2","",
			"frLeftTurbine3","",
			"frRightTurbine1","",
			"frRightTurbine2","",
			"frRightTurbine3",""
		};
	};
	class ex25nemesis_skeleton: Helicopter
	{
		skeletonInherit="Helicopter";
		isDiscrete = 0;
		skeletonBones[]=
		{
			"frontGearL","",
			"frontGearR","",
			"rearGearM1","",
			"rearGearM2","",
			"rearGearR1","",
			"rearGearR2","",
			"rightHardpointCover","",
			"leftHardpointCover","",
			"topBayDoor","",
			"bottomBayDoor",""
		};
	};
};
class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};
class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle: Default
	{
		sections[] =
		{
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh"
		};
	};
	class Helicopter: Vehicle
	{

		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 1800;	// Maximum half-cooling time (in seconds)
		afMax = 200;	// Maximum temperature in case the model is alive (in celsius)
		mfMax = 100;	// Maximum temperature when the model is moving (in celsius)
		mFact = 0;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 0;	 	// Metabolism temperature of the model (in celsius)

		sectionsInherit="Vehicle";
		sections[]=
		{
			"glass1",
			"glass2",
			"glass3",
			"glass4",
			"glass5",
			"glass6",
			"glass7",
			"glass8",
			"glass9",
			"glass10",
			"glass11",
			"glass12"
		};
		skeletonName="Helicopter";
		class Animations
		{
			class Rotor_destructY1
			{
				type="rotationY";
				source="damage";
				selection="frLeftTurbine1";
				axis="frLeftTurbine1Axis";
				animPeriod=0;
				minValue=0.99;
				maxValue=1;
				angle0=0;
				angle1="rad -20";
			};
			class Rotor_destructY2: Rotor_destructY1
			{
				selection="frLeftTurbine2";
				axis="frLeftTurbine2Axis";
				angle1="rad +25";
			};
			class Rotor_destructY3: Rotor_destructY1
			{
				selection="frLeftTurbine3";
				axis="frLeftTurbine3Axis";
				angle1="rad +45";
			};
			class Rotor_destructY4: Rotor_destructY1
			{
				selection="frRightTurbine1";
				axis="frRightTurbine1Axis";
				angle1="rad -20";
			};
			class Rotor_destructY5: Rotor_destructY1
			{
				selection="frRightTurbine2";
				axis="frRightTurbine2Axis";
				angle1="rad -5";
			};
			class Rotor_destructY6: Rotor_destructY1
			{
				selection="frRightTurbine3";
				axis="frRightTurbine3Axis";
				angle1="rad 10";
			};

			class HRotor1: Rotation
			{
				source="rotorH";
				selection="frLeftTurbine1";
				axis="frLeftTurbine1Axis";
				angle1="2 * 3.1415926536";
			};
			class HRotor2: HRotor1
			{
				selection="frLeftTurbine3";
				axis="frLeftTurbine3Axis";
			};
			class HRotor3: HRotor1
			{
				selection="frRightTurbine1";
				axis="frRightTurbine1Axis";
			};
			class HRotor4: HRotor1
			{
				selection="frRightTurbine3";
				axis="frRightTurbine3Axis";
			};
			class VRotor1: Rotation
			{
				source="rotorV";
				selection="frLeftTurbine2";
				axis="frLeftTurbine2Axis";
				angle1="2 * 3.1415926536";
			};
			class VRotor2: VRotor1
			{
				selection="frRightTurbine2";
				axis="frRightTurbine2Axis";
			};
		};
	};
	class ex25nemesis: Helicopter
	{
		skeletonName="ex25nemesis_skeleton";
		sectionsInherit="Helicopter";
		sections[]=
		{
			"camo",
			"camo_engines",
			"camo_cockpit",
			"camo_gear",
			"camo_bay"
		};
		class Animations: Animations
		{
			class bayDoorTop
			{
				type="rotation";
				axis="rampDoorCenterAxis";
				animPeriod=1;
				source="Doors";
				selection="topBayDoor";
				offset0=0;
				offset1=1.00;
				minValue=0;
				maxValue=0.05;
			};
			class bayDoorBottom
			{
				type="rotation";
				axis="rampDoorCenterAxis";
				animPeriod=1;
				source="Doors";
				selection="bottomBayDoor";
				offset0=0;
				offset1=1.00;
				minValue=0;
				maxValue=0.05;
			};
			class gear1
			{
				type="translation";
				source="altSurface";
				selection="frontGearL";
				axis="frontGearLAxis";
				memory=1;
				minValue=0.000000;
				maxValue=0.300000;
				offset0=0;
				offset1=-0.4;
			};
			class gear2: gear1
			{
				selection="frontGearR";
				axis="frontGearRAxis";
			};
			class gear3: gear1
			{
				selection="rearGearM1";
				axis="rearGearM1Axis";
			};
			class gear4: gear1
			{
				selection="rearGearM2";
				axis="rearGearM2Axis";
			};
			class gear5: gear1
			{
				selection="rearGearR1";
				axis="rearGearR1Axis";
			};
			class gear6: gear1
			{
				selection="rearGearR2";
				axis="rearGearR2Axis";
			};
			class gearAnimRotL1
			{
				type="rotation";
				source="gear";
				selection="frontGearL";
				axis="frontGearLAxis";
				memory=1;
				minValue=0;
				maxValue=90;
				angle0=0;
				angle1=90;
			};
			class gearAnimRotL2: gearAnimRotL1
			{
				selection="rearGearM2";
				axis="rearGearM2Axis";
			};
			class gearAnimRotL3: gearAnimRotL1
			{
				selection="rearGearR2";
				axis="rearGearR2Axis";
			};
			class gearAnimRotR1
			{
				type="rotation";
				source="gear";
				selection="frontGearR";
				axis="frontGearRAxis";
				memory=1;
				minValue=0;
				maxValue=-90;
				angle0=0;
				angle1=90;
			};
			class gearAnimRotR2: gearAnimRotR1
			{
				selection="rearGearM1";
				axis="rearGearM1Axis";
			};
			class gearAnimRotR3: gearAnimRotR1
			{
				selection="rearGearR2";
				axis="rearGearR1Axis";
			};
			class gearAnimTrans1
			{
				type="translation";
				source="gear";
				selection="frontGearL";
				axis="frontGearLAxis";
				memory=1;
				minValue=0;
				maxValue=90;
				offset0=0;
				offset1=-80;
			};
			class gearAnimTrans2: gearAnimTransL1
			{
				selection="frontGearR";
				axis="frontGearRAxis";
			};
			class gearAnimTrans3: gearAnimTransL1
			{
				selection="rearGearM1";
				axis="rearGearM1Axis";
			};
			class gearAnimTrans4: gearAnimTransL1
			{
				selection="rearGearM2";
				axis="rearGearM2Axis";
			};
			class gearAnimTrans5: gearAnimTransL1
			{
				selection="rearGearR1";
				axis="rearGearR1Axis";
			};
			class gearAnimTrans6: gearAnimTransL1
			{
				selection="rearGearR2";
				axis="rearGearR2Axis";
			};
		};
	};
};
